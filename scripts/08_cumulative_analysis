/*
===============================================================================
Cumulative Analysis
===============================================================================
Purpose:
    - To calculate running totals and moving averages for key performance metrics.
    - To monitor cumulative performance over time.
    - Useful for analyzing growth trends, pacing, and long-term patterns.

SQL Techniques Used:
    - Window Functions:
        - SUM() OVER(): For calculating running totals.
        - AVG() OVER(): For computing moving averages.

Recommended Use Cases:
    - Sales growth tracking
    - Cumulative revenue/profit reporting
    - Rolling average for pricing or customer engagement
===============================================================================
*/

-- Calculate the total sales per year 
-- and the running total of sales over time 
SELECT
    order_year,
    total_sales,
    SUM(total_sales) OVER (ORDER BY order_year) AS running_total_sales,
    AVG(avg_price) OVER (ORDER BY order_year) AS moving_average_price
FROM
(
    SELECT 
        DATEFROMPARTS(YEAR(order_date), 1, 1) AS order_year,
        SUM(sales_amount) AS total_sales,
        AVG(price) AS avg_price
    FROM gold.fact_sales
    WHERE order_date IS NOT NULL
    GROUP BY DATEFROMPARTS(YEAR(order_date), 1, 1)
) t
ORDER BY order_year;
